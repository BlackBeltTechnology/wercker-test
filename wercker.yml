box: maven:3.5.4-jdk-8
no-response-timeout: 15
command-timeout: 60

build:
  steps:	
    - blackbelttechnology/version-from-git-tag@1.0.4
 
    - blackbelttechnology/version-from-pom@1.0.2:
       pom: wercker-test-parent/pom.xml
      
    - wercker/maven:
      goals: versions:set
      pom: ./wercker-test-parent/pom.xml
      maven_opts: -DnewVersion=${VERSION_FROM_POM_BASE_VERSION}-${VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME}_${VERSION_FROM_GIT_TAG_COMMIT_COUNT}
      cache_repo: true

    - wercker/maven:
      goals: clean install
      settings: .maven.xml
      profiles: release-github
      cache_repo: true

# Based on http://vincent.demeester.fr/posts/2012-07-23-maven-release-gitflow/
release:
  steps:
    - blackbelttechnology/import-gpg-keys@1.0.4:
      secretkeys: $GPG_SECRET_KEYS 
      ownertrust: $GPG_OWNERTRUST

    - script:
        name: setup git for maven
        code: |-
             git config --global user.email "oss@blackbelt.hu"
             git config --global user.name "Wercker Release"
    
    - blackbelttechnology/version-from-git-tag@1.0.0

    - script:
        name: reset git state to actual commit
        code: |-
             git reset --hard $WERCKER_GIT_COMMIT

    - script:
        name: create barnch for builder
        code: |-
             git branch wercker_$WERCKER_BUILD_ID

    - blackbelttechnology/version-from-pom@1.0.2:
       pom: wercker-test-parent/pom.xml

    - script:
        name: create release branch from current commit
        code: |-
             git checkout -b release/v$VERSION_FROM_POM_BASE_VERSION wercker_$WERCKER_BUILD_ID

# Release plugoin does not work
    - wercker/maven:
      goals: release:prepare
      settings: .maven.xml
      profiles: release-blackbelt
      cache_repo: true

    - wercker/maven:
      goals: release:perform
      settings: .maven.xml
      profiles: release-blackbelt
      cache_repo: true

    - script:
        name: draw git
        code: |-
             git log --graph --oneline --all

#    - wercker/maven:
#      goals: versions:set
#      pom: ./wercker-test-parent/pom.xml
#      maven_opts: -DnewVersion=${VERSION_FROM_POM_BASE_VERSION} -DgenerateBackupPoms=false
#      settings: .maven.xml
#      profiles: release-blackbelt
#      cache_repo: true

#    - wercker/maven:
#      goals: clean deploy
#      settings: .maven.xml
#      profiles: release-blackbelt
#      cache_repo: true

#    - script:
#        name: commit to release branch
#        code: |-
#             git add .
#             git commit -m "Release v$VERSION_FROM_POM_BASE_VERSION"

#    - script:
#        name: tag release branch
#        code: |-
#             git tag -a v$VERSION_FROM_POM_BASE_VERSION

    - script:
        name: get back to the develop branch
        code: |-
             git checkout develop

    - script:
        name: merge the version back into develop
        code: |-
             git merge --no-ff release/v$VERSION_FROM_POM_BASE_VERSION

#    - wercker/maven:
#      goals: build-helper:parse-version versions:set
#      pom: ./wercker-test-parent/pom.xml
#      maven_opts: -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT -DgenerateBackupPoms=false
#      cache_repo: true

#    - script:
#        name: commit to release branch
#        code: |-
#             git commit -m "New development cycle"

    - script:
        name: git checkout master
        code: |-
             git checkout master

    - script:
        name: merge the version back into master but the tagged version instead of the release/v0.1 HEAD
        code: |-
             git merge --no-ff release/v$VERSION_FROM_POM_BASE_VERSION~1

#    - script:
#        name: merge the release version back into master
#        code: |-
#             git merge --no-ff release/v$VERSION_FROM_POM_BASE_VERSION

#    - script:
#        name: delete release branch
#        code: |-
#             git branch -D release/v$VERSION_FROM_POM_BASE_VERSION


    - script:
        name: draw git
        code: |-
             git log --graph --oneline --all

    - script:
        name: delete builder branch
        code: |-
             git branch -D wercker_$WERCKER_BUILD_ID


    - script:
        name: push everything
        code: |-
             REMOTE="https://$GITHUB_ACCESS_TOKEN@github.com/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY.git"
             git push $REMOTE --all
             git push $REMOTE --tags

    - script:
        name: print version
        code: |-
             echo "=================================================================================================================================="
             echo "  RELEASE VERSION: ${APP_VERSION}  OK"
             echo "=================================================================================================================================="
